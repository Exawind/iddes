===============================================================================
                                  Nalu-Wind                                    
       An incompressible, turbulent computational fluid dynamics solver        
                  for wind turbine and wind farm simulations                   
===============================================================================

   Nalu-Wind Version: v1.2.0
   Nalu-Wind GIT Commit SHA: 7513a56f6af2c7bb38a43e5c81cd13c6e16d470b
   Trilinos Version: 13.1-g15f1577

   TPLs: Boost, HDF5, netCDF, STK, Trilinos, yaml-cpp and zlib   
   Optional TPLs enabled: OpenFAST, Hypre
   Copyright 2017 National Technology & Engineering Solutions of Sandia, LLC   
   (NTESS), National Renewable Energy Laboratory, University of Texas Austin,  
    Northwest Research Associates. Under the terms of Contract DE-NA0003525    
    with NTESS, the U.S. Government retains certain rights in this software.   
                                                                               
           This software is released under the BSD 3-clause license.           
   See LICENSE file at https://github.com/exawind/nalu-wind for more details.  
-------------------------------------------------------------------------------


Realm Options Review: realm_1
===========================
Edge-based scheme will be activated
Nalu will deactivate aura ghosting

Turbulence Model Review:   
===========================
Turbulence Model is: sst_iddes 1

PPE review:   
===========================
Realm::create_mesh(): Begin
Realm::create_mesh() End

Boundary Condition Review: 
===========================
Wall BC name:        bc_top on top
Wall BC name:        bc_wall on wall
Periodic BC name:    bc_inlet_outlet between inlet and outlet
Periodic BC name:    bc_front_back between front and back

Initial Condition Review:  
===========================
Initial Is Type constant 
constant IC: name: ic_1 , target[0] = interior-hex

Material Prop Review:      
===========================
density is a constant property: 1
viscosity is a constant property: 9.43396e-05

EqSys/options Review:      
===========================
Edge projected nodal gradient for minimum distance to wall: 1
Edge projected nodal gradient for velocity: 0
Edge projected nodal gradient for pressure: 0
Edge projected nodal gradient for turbulent_ke: 0
Edge projected nodal gradient for specific_dissipation_rate: 0

Realm memory Review:       realm_1
===========================
Node count from meta data = 1210477
Total memory estimate for Matrix solve (per core)= 0.0247311 GB.
Total memory estimate (per core) = 0.0247311 GB.

Time Integrator Review:  
=========================
StandardTimeIntegrator 
 name=              ti_1
 second order =     1
 maxTimeStepCount = 200000
 fixed time step is active   with time step: 0.004
StandardTimeIntegrator realm_name[0]= realm_1

Transfer Review:         
=========================
Realm::initialize() Begin 
Created algorithm = Alg0000_elem_HEXAHEDRON_8_geometry
Created algorithm = Alg0000_edge_nodal_grad
Created algorithm = Alg0000_elem_HEXAHEDRON_8_courant_reynolds
Created algorithm = Alg0000_elem_HEXAHEDRON_8_momentum_nodal_grad
Processing user source terms for momentum
Created algorithm = Alg0001_face_QUADRILATERAL_4_geometry
Created algorithm = Alg0002_face_QUADRILATERAL_4_body_force_inflow
  - body_force_box
Created algorithm = Alg0000_elem_HEXAHEDRON_8_continuity_nodal_grad
Created algorithm = Alg0000_edge_mdot_edge_interior
Created algorithm = Alg0000_elem_HEXAHEDRON_8_tke_nodal_grad
Created algorithm = Alg0000_elem_HEXAHEDRON_8_sdr_nodal_grad
Created algorithm = Alg0003_face_QUADRILATERAL_4_nodal_grad
Created algorithm = Alg0003_face_QUADRILATERAL_4_momentum_nodal_grad
Created algorithm = Alg0003_face_QUADRILATERAL_4_continuity_nodal_grad
Created algorithm = Alg0003_face_QUADRILATERAL_4_HEXAHEDRON_8_sst_geometry_wall
Created algorithm = Alg0003_face_QUADRILATERAL_4_tke_nodal_grad
Created algorithm = Alg0003_face_QUADRILATERAL_4_HEXAHEDRON_8_sdr_wall_func
Created algorithm = Alg0003_face_QUADRILATERAL_4_sdr_nodal_grad
PeriodicManager::search method not declared; will use stk_kdtree
PeriodicManager::search method not declared; will use stk_kdtree
the post processing type is surface
the post processing file name: periodicHill_surface.dat
the post processing physics name: surface_force_and_moment
Target name(s): top
Target name(s): wall
Parameters used are: 0
Parameters used are: 0
Realm::ioBroker_->populate_mesh() Begin
Realm::ioBroker_->populate_mesh() End
Realm::create_edges(): Nalu Realm: realm_1 requires edge creation: Begin
Realm::create_edges(): Nalu Realm: realm_1 requires edge creation: End
Realm::ioBroker_->populate_field_data() Begin
Realm::ioBroker_->populate_field_data() End
Realm::skin_mesh(): Begin
Realm::skin_mesh(): End
Realm::create_output_mesh(): Begin
Realm::create_output_mesh() End

Periodic Review:  realm: realm_1
=========================
Translating [ -9 3.63652e-16 0 ] Master/Slave pair 
Translating [ -1.2757e-15 6.3785e-16 4.5 ] Master/Slave pair 
Translating [ -9 0 4.5 ] Master/Slave pair 
---------------------------------------------------
Parallel consistency noted in master/slave pairings: 27694/27694
---------------------------------------------------

 DualNodalVolume min: 8.36563e-07 max: 0.000827029 total: 117.416
EquationSystems::initialize(): Begin 
EquationSystems::initialize(): End 

Realm memory Review:       realm_1
===========================
Total memory estimate for Matrix solve (per core)= 0.0247311 GB.
Total memory estimate for Fields (per core)= 0.00200856 GB.
Total memory estimate (per core) = 0.0267397 GB.
Realm::initialize() End 

*******************************************************
Simulation Shall Commence: number of processors = 384
